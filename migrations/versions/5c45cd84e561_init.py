"""init

Revision ID: 5c45cd84e561
Revises:
Create Date: 2024-03-30 18:08:16.726173

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlmodel
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "5c45cd84e561"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "config_attribute",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("config_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("config_value", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("uom", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("category_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_producible", sa.Boolean(), nullable=False),
        sa.Column("is_purchasable", sa.Boolean(), nullable=False),
        sa.Column("type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("purchase_uom", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("purchase_uom_conversion_rate", sa.Integer(), nullable=False),
        sa.Column("batch_tracked", sa.Boolean(), nullable=False),
        sa.Column(
            "additional_info", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("created_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("updated_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(
        sa.DDL(
            """
            ALTER TABLE product
            ALTER COLUMN created_at TYPE timestamp without time zone
            USING created_at::timestamp without time zone
            """
        )
    )
    op.execute(
        sa.DDL(
            """
            ALTER TABLE product
            ALTER COLUMN updated_at TYPE timestamp without time zone
            USING updated_at::timestamp without time zone
            """
        )
    )
    op.create_table(
        "product_variant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("sku", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sales_price", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("purchase_price", sa.Integer(), nullable=False),
        sa.Column("type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("updated_at", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.execute(
        sa.DDL(
            """
            ALTER TABLE product_variant
            ALTER COLUMN created_at TYPE timestamp without time zone
            USING created_at::timestamp without time zone
            """
        )
    )
    op.execute(
        sa.DDL(
            """
            ALTER TABLE product_variant
            ALTER COLUMN updated_at TYPE timestamp without time zone
            USING updated_at::timestamp without time zone
            """
        )
    )
    op.create_table(
        "product_to_variants",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("variant_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["variant_id"],
            ["product_variant.id"],
        ),
        sa.PrimaryKeyConstraint("product_id", "variant_id"),
    )
    op.create_table(
        "product_variants_to_config_attributes",
        sa.Column("product_variant_id", sa.Integer(), nullable=False),
        sa.Column("config_attribute_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["config_attribute_id"],
            ["config_attribute.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_variant_id"],
            ["product_variant.id"],
        ),
        sa.PrimaryKeyConstraint("product_variant_id", "config_attribute_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product_variants_to_config_attributes")
    op.drop_table("product_to_variants")
    op.drop_table("product_variant")
    op.drop_table("product")
    op.drop_table("config_attribute")
    # ### end Alembic commands ###
